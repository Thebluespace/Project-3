{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/Industry/Industry.js","components/Wrapper/Wrapper.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","id","className","role","aria-label","aria-expanded","aria-hidden","Search","type","placeholder","Industry","SearchResultContainer","state","placesResults","Yeet","_this","placeResults","length","components_Search_Search","components_Industry_Industry","this","Component","Footer","href","App","BrowserRouter","components_Header_Header","Switch","Route","path","Wrapper_Wrapper","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2VAmCeA,eAhCA,SAAAC,GAAK,OAEhBC,EAAAC,EAAAC,cAAA,WAASC,GAAG,OAAOC,UAAU,mBACzBJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASC,KAAK,aAAaC,aAAW,mBACjDN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAKXJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,YAAWH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BAEnCJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgBE,aAAW,OAAOC,gBAAc,SAC9DP,EAAAC,EAAAC,cAAA,QAAMM,cAAY,SAClBR,EAAAC,EAAAC,cAAA,QAAMM,cAAY,SAClBR,EAAAC,EAAAC,cAAA,QAAMM,cAAY,aAOlCR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,yDCFDK,eAtBK,WACb,OACDT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SAASC,UAAU,+BACvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,KAAK,OAAOC,YAAY,qBAEnDX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBD,GAAG,YAAtC,kBCiELS,SA5EE,WACb,OAgBIZ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAEXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,UAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,UAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,YAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,aAKRJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,cAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,UAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,mBAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAEnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,2BC/CLS,6MAjBXC,MAAQ,CACJC,cAAe,MAGnBC,KAAO,WACH,OAAGC,EAAKH,MAAMI,aAAaC,OAChBnB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACkB,EAAD,MAASpB,EAAAC,EAAAC,cAACmB,EAAD,gFAQzB,OAAQC,KAAKN,YAfeO,aCSrBC,SAZA,SAAAzB,GAAK,OAChBC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,uBADA,OAC0BF,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,sBAAR,iBAD1B,gCAEAzB,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,kDAAR,OAFA,qCAGYzB,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,qDAAR,mBAHZ,SC+BGC,EAfH,kBACV1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0B,EAAD,MACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,KAAK,IAAIR,UAAWvB,EAAAC,EAAAC,cAAC8B,EAAD,SAK/BhC,EAAAC,EAAAC,cAAC+B,EAAD,SCpBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.93cd952b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n\r\n    <section id=\"hero\" className=\"hero is-primary\">\r\n        <div>\r\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n                <div className=\"navbar-brand\">\r\n                    {/* <a class=\"navbar-item\" href=\"https://bulma.io\">\r\n                    <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\"/>\r\n                </a> */}\r\n                    {/* put back role=button when you have a working link */}\r\n                    <button id=\"location\"><i className=\"fas fa-map-marker-alt\"></i></button>\r\n                    {/* change buttons back to a */}\r\n                    <button className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\">\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n        <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n                <h1 className=\"title\">\r\n                    WHO'S BAD?\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n);\r\nexport default Header;","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\n     const Search = () => {\r\n       return (\r\n      <div className=\"columns\">\r\n        <div id=\"search\" className=\"hero-body has-text-centered\">\r\n            <div className=\"columns is-mobile is-centered\">\r\n              <div className=\"column is-half is-narrow\">\r\n                <div className=\"field has-addons\">\r\n                  <div className=\"control is-expanded\">\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Find a business\"/>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <button className=\"button is-info\" id=\"btn-info\">\r\n                      Search\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n       )\r\n     };\r\nexport default Search;","import React from \"react\";\r\nimport \"./Industry.css\";\r\n\r\nconst Industry = () => {\r\n    return (\r\n        // <div className=\"tile is-ancestor\">\r\n        //     <div className=\"tile is-2 is-vertical is-parent is-2\">\r\n        //         <div className=\"tile is-child is-primary box\">\r\n        //             <p className=\"title\">One</p>\r\n        //         </div>\r\n        //         <div className=\"tile is-child is-warning box\">\r\n        //             <p className=\"title\">Two</p>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className=\"tile is-parent is-2 is-info\">\r\n        //         <div className=\"tile is-child box\">\r\n        //             <p className=\"title\">Three</p>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <div id=\"industry\">\r\n            <div className=\"tile is-ancestor\">\r\n                \r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\"></p> */}\r\n                    <p className=\"subtitle\">Auto</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Two</p> */}\r\n                    <p className=\"subtitle\">Food</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Three</p> */}\r\n                    <p className=\"subtitle\">Retail</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Four</p> */}\r\n                    <p className=\"subtitle\">Health</p>\r\n                    </article>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"tile is-ancestor\">\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">One</p> */}\r\n                    <p className=\"subtitle\">Services</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Two</p> */}\r\n                    <p className=\"subtitle\">Pets</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Three</p> */}\r\n                    <p className=\"subtitle\">Entertainment</p>\r\n                    </article>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                    <article className=\"tile is-child box\">\r\n                    {/* <p className=\"title\">Four</p> */}\r\n                    <p className=\"subtitle\">Clothing + Beauty</p>\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )            \r\n};\r\n            \r\nexport default Industry;","import React, { Component } from \"react\";\r\nimport \"./Wrapper.css\";\r\nimport Search from \"../Search/Search.js\";\r\nimport Industry from \"../Industry/Industry.js\";\r\n//import DisplayResults from \"./components/Display/Display.js\";\r\n\r\nclass SearchResultContainer extends Component {\r\n    state = {\r\n        placesResults: []\r\n    }\r\n    \r\n    Yeet = () => {\r\n        if(this.state.placeResults.length === 0) {\r\n            return <div><Search/><Industry/></div>\r\n        } else {\r\n            //return <DisplayResults results={this.state.placesResults} />;\r\n            return <div><Search/><Industry/></div>\r\n        }   \r\n    };\r\n\r\n    render() {\r\n        return (this.Yeet);\r\n    };\r\n}\r\nexport default SearchResultContainer;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = props => (\r\n    <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n            <p>\r\n            <strong>Bulma</strong> by <a href=\"https://jgthms.com\">Jeremy Thomas</a>. The source code is licensed\r\n            <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. The website content\r\n            is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\r\n            </p>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { hasRole, isAllowed } from './config/alligator';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './components/Header/Header.js';\r\nimport Wrapper from './components/Wrapper/Wrapper.js';\r\nimport Search from \"./components/Search/Search.js\";\r\nimport Industry from \"./components/Industry/Industry.js\";\r\nimport Footer from \"./components/Footer/Footer.js\";\r\n//import UserLogin from \"./components/Login/Login.js\";\r\n\r\nconst user = {\r\n  roles: [\"user\"],\r\n  rights: [\"user\"]\r\n};\r\n\r\nconst admin = {\r\n  roles : [\"admin\"],\r\n  rights: [\"admin\"]\r\n};\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Header />\r\n        <Switch>\r\n          <Route path=\"*\" Component={<Wrapper/>}></Route>\r\n          {/* {hasRole(user, [\"user\"]) && <Route exact path=\"/\" Component={<Wrapper/>}/>} */}\r\n          {/* {!hasRole(user, [\"user\"]) && <Route path=\"/\" Component={<UserLogin/>}/>}  */}\r\n          \r\n        </Switch>\r\n      <Footer />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}